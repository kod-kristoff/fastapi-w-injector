name: CI

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - v*
  pull_request:
    branches:
      - "*"

env:
  POETRY_VERSION: 1.1.10

jobs:

  tests:
    name: ${{ matrix.task.name }} py-${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [ubuntu-latest]
        task:
          - name: Run tests
            run: poetry run pytest -vv tests
            allow_failure: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached $HOME/.local
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}
        continue-on-error: ${{ matrix.task.allow_failure }}
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false
          verbose: true

